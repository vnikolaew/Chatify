version: '3.9'

services:
    caddy:
        image: caddy
        ports:
            - "90:80"
            - "444:443"
        volumes:
            - ./caddy/Caddyfile:/etc/caddy/Caddyfile
            - ./caddy/custom.pem:/etc/caddy/localhost-cert.pem
            - ./caddy/custom-key.pem:/etc/caddy/localhost-key.pem
        networks:
            default:
        depends_on:
            - chatify-web
        restart: on-failure
    chatify-web:
        build:
            context: ../web/.
            dockerfile: Dockerfile
        networks:
            default:
        ports:
            - "3000:3000"
        depends_on:
            - web-server
        restart: on-failure
    jaeger:
        image: jaegertracing/all-in-one:1.6
        container_name: jaeger
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
            - "16686:16686"
            - "14268:14268"
            - "9411:9411"
        environment:
            - COLLECTOR_ZIPKIN_HTTP_PORT=9411
        networks:
            default:
    redis:
        image: redis/redis-stack:latest
        container_name: redis
        networks:
            - default
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
    #            - ./redis/redis.conf:/redis-stack.conf
    web-server:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: chatify-server-1
        environment:
            - ASPNETCORE_HTTP_PORTS=80
            - ASPNETCORE_HTTPS_PORTS=443
            - ASPNETCORE_ENVIRONMENT=Production
            - Redis__Endpoint=redis:6379
            - Cassandra__ContactPoints:0=scylla1
            - Cassandra__Port=9042
            - UseSeeding=true
        networks:
            - default
        depends_on:
            - redis
            - scylla1
            - scylla2
            - scylla3
            - jaeger
        restart: always
        ports:
            - "5001:443"
            - "5000:80"
    scylla1:
        image: scylladb/scylla
        container_name: scylla1
        ports:
            - "9042:9042" # ScyllaDB CQL port
        volumes:
            - scylla-data-node1:/var/lib/scylla
        networks:
            - default
        restart: always
        command: "--smp 2"
        environment:
            - SCYLLA_SEEDS=scylla1,scylla2,scylla3
    scylla2:
        image: scylladb/scylla
        container_name: scylla2
        command: "--smp 2 --seeds scylla1"
        ports:
            - "9043:9042" # ScyllaDB CQL port
        volumes:
            - scylla-data-node2:/var/lib/scylla
        restart: always
        depends_on:
            - scylla1
        networks:
            - default
        environment:
            - SCYLLA_SEEDS=scylla1,scylla2,scylla3
    
    scylla3:
        image: scylladb/scylla
        container_name: scylla3
        command: "--smp 2 --seeds scylla1"
        ports:
            - "9044:9042" # ScyllaDB CQL port
        volumes:
            - scylla-data-node3:/var/lib/scylla
        restart: always
        depends_on:
            - scylla1
        networks:
            - default
        environment:
            - SCYLLA_SEEDS=scylla1,scylla2,scylla3

volumes:
    scylla-data-node1:
    scylla-data-node2:
    scylla-data-node3:
    redis-data:
networks:
    default: