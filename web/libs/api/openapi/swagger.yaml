openapi: 3.0.1
info:
  title: Chatify Server
  version: v1
servers:
  - url: https://localhost:7139
paths:
  /api/Auth/me:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  /api/Auth/signup:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularSignUp'
          text/json:
            schema:
              $ref: '#/components/schemas/RegularSignUp'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegularSignUp'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  /api/Auth/signout:
    post:
      tags:
        - Auth
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  /api/Auth/signin:
    post:
      tags:
        - Auth
      parameters:
        - name: returnUrl
          in: query
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegularSignIn'
          text/json:
            schema:
              $ref: '#/components/schemas/RegularSignIn'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegularSignIn'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
        '302':
          description: Redirect
  /api/Auth/signup/google:
    post:
      tags:
        - Auth
      parameters:
        - name: returnUrl
          in: query
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleSignUp'
          text/json:
            schema:
              $ref: '#/components/schemas/GoogleSignUp'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GoogleSignUp'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  /api/Auth/signup/facebook:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookSignUp'
          text/json:
            schema:
              $ref: '#/components/schemas/FacebookSignUp'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FacebookSignUp'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  /api/Auth/signup/github:
    post:
      tags:
        - Auth
      parameters:
        - name: code
          in: query
          style: form
          schema:
            type: string
        - name: returnUrl
          in: query
          style: form
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  /api/Auth/confirm-email:
    post:
      tags:
        - Auth
      parameters:
        - name: token
          in: query
          style: form
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
  /api/Auth/cookie-policy:
    post:
      tags:
        - Auth
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
    delete:
      tags:
        - Auth
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
  '/api/chatgroups/join/{groupId}':
    post:
      tags:
        - ChatGroupJoinRequests
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/chatgroups/accept/{requestId}':
    post:
      tags:
        - ChatGroupJoinRequests
      parameters:
        - name: requestId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/chatgroups/decline/{requestId}':
    post:
      tags:
        - ChatGroupJoinRequests
      parameters:
        - name: requestId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/chatgroups/requests/{groupId}':
    get:
      tags:
        - ChatGroupJoinRequests
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupJoinRequestEntryListApiResponse'
  /api/ChatGroups:
    post:
      tags:
        - ChatGroups
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                About:
                  type: string
                Name:
                  type: string
                File:
                  type: string
                  format: binary
                MemberIds:
                  type: array
                  items:
                    type: string
                    format: uuid
            encoding:
              About:
                style: form
              Name:
                style: form
              File:
                style: form
              MemberIds:
                style: form
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/ChatGroups/{groupId}':
    get:
      tags:
        - ChatGroups
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupDetailsEntryApiResponse'
    patch:
      tags:
        - ChatGroups
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ChatGroupId:
                  type: string
                  format: uuid
                Name:
                  type: string
                About:
                  type: string
                File:
                  type: string
                  format: binary
            encoding:
              ChatGroupId:
                style: form
              Name:
                style: form
              About:
                style: form
              File:
                style: form
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  /api/ChatGroups/feed:
    get:
      tags:
        - ChatGroups
      parameters:
        - name: limit
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupFeedEntryListApiResponse'
  '/api/ChatGroups/{groupId}/members/search':
    get:
      tags:
        - ChatGroups
      parameters:
        - name: q
          in: query
          style: form
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListApiResponse'
  /api/ChatGroups/search:
    get:
      tags:
        - ChatGroups
      parameters:
        - name: q
          in: query
          style: form
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupListApiResponse'
  '/api/ChatGroups/{groupId}/attachments':
    get:
      tags:
        - ChatGroups
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatGroupSharedAttachmentsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetChatGroupSharedAttachmentsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetChatGroupSharedAttachmentsRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupAttachmentCursorPagedApiResponse'
  '/api/ChatGroups/{groupId}/pins':
    get:
      tags:
        - ChatGroups
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageListApiResponse'
  /api/ChatGroups/members:
    post:
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddChatGroupMember'
          text/json:
            schema:
              $ref: '#/components/schemas/AddChatGroupMember'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddChatGroupMember'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: string
                format: uuid
    delete:
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveChatGroupMember'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoveChatGroupMember'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoveChatGroupMember'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
  '/api/ChatGroups/members/{groupId}/{memberId}':
    get:
      tags:
        - ChatGroups
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: memberId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupMemberApiResponse'
  /api/ChatGroups/leave:
    post:
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveChatGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/LeaveChatGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LeaveChatGroup'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
  /api/ChatGroups/admins:
    post:
      tags:
        - ChatGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddChatGroupAdmin'
          text/json:
            schema:
              $ref: '#/components/schemas/AddChatGroupAdmin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddChatGroupAdmin'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  /api/Friendships:
    get:
      tags:
        - Friendships
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListApiResponse'
  /api/Friendships/sent:
    get:
      tags:
        - Friendships
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendInvitationListApiResponse'
  /api/Friendships/incoming:
    get:
      tags:
        - Friendships
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendInvitationListApiResponse'
  '/api/Friendships/invite/{userId}':
    post:
      tags:
        - Friendships
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/Friendships/accept/{inviteId}':
    post:
      tags:
        - Friendships
      parameters:
        - name: inviteId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/Friendships/decline/{inviteId}':
    post:
      tags:
        - Friendships
      parameters:
        - name: inviteId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
  '/api/Friendships/{friendId}':
    delete:
      tags:
        - Friendships
      parameters:
        - name: friendId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '204':
          description: No Content
  '/api/Messages/{groupId}':
    get:
      tags:
        - Messages
      parameters:
        - name: GroupId
          in: query
          style: form
          schema:
            type: string
            format: uuid
        - name: PageSize
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: PagingCursor
          in: query
          style: form
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGroupMessageEntryCursorPagedApiResponse'
    post:
      tags:
        - Messages
      parameters:
        - name: groupId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ChatGroupId:
                  type: string
                  format: uuid
                Content:
                  type: string
                Files:
                  type: array
                  items:
                    type: string
                    format: binary
                Metadata:
                  type: object
                  additionalProperties:
                    type: string
            encoding:
              ChatGroupId:
                style: form
              Content:
                style: form
              Files:
                style: form
              Metadata:
                style: form
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema: { }
  '/api/Messages/{messageId}/replies':
    get:
      tags:
        - Messages
      parameters:
        - name: MessageId
          in: query
          style: form
          schema:
            type: string
            format: uuid
        - name: PageSize
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: PagingCursor
          in: query
          style: form
          schema:
            type: string
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageReplyCursorPagedApiResponse'
    post:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendGroupChatMessageReplyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendGroupChatMessageReplyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendGroupChatMessageReplyRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/Messages/replies/{messageId}':
    delete:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
    put:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  '/api/Messages/{messageId}':
    put:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditGroupChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
    delete:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteGroupChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
  '/api/Messages/pins/{messageId}':
    post:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
    delete:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '204':
          description: No Content
  '/share/{messageId}':
    post:
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareMessage'
          text/json:
            schema:
              $ref: '#/components/schemas/ShareMessage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ShareMessage'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  /api/Notifications:
    get:
      tags:
        - Notifications
      parameters:
        - name: pageSize
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: pagingCursor
          in: query
          style: form
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationCursorPagedApiResponse'
  /api/Notifications/unread:
    get:
      tags:
        - Notifications
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationCursorPagedApiResponse'
  /api/Notifications/read:
    put:
      tags:
        - Notifications
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
  /api/Profile/status:
    put:
      tags:
        - Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeUserStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeUserStatus'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '202':
          description: Accepted
  /api/Profile/details:
    patch:
      tags:
        - Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserDetails'
          text/json:
            schema:
              $ref: '#/components/schemas/EditUserDetails'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EditUserDetails'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  '/api/Profile/{userId}/details':
    get:
      tags:
        - Profile
      parameters:
        - name: userId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsEntryApiResponse'
  /api/Profile/search:
    get:
      tags:
        - Profile
      parameters:
        - name: usernameQuery
          in: query
          style: form
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListApiResponse'
  /api/Profile:
    get:
      tags:
        - Profile
      parameters:
        - name: handle
          in: query
          style: form
          schema:
            type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsEntryApiResponse'
  '/api/Reactions/{messageId}':
    post:
      tags:
        - Reactions
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
    get:
      tags:
        - Reactions
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageReactionListApiResponse'
  '/api/Reactions/replies/{messageId}':
    post:
      tags:
        - Reactions
      parameters:
        - name: messageId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReactToChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectApiResponse'
  '/api/Reactions/{messageReactionId}':
    delete:
      tags:
        - Reactions
      parameters:
        - name: messageReactionId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
  '/api/Reactions/replies/{messageReactionId}':
    delete:
      tags:
        - Reactions
      parameters:
        - name: messageReactionId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UnreactToChatMessageRequest'
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitApiResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '202':
          description: Accepted
components:
  schemas:
    AddChatGroupAdmin:
      type: object
      properties:
        chatGroupId:
          type: string
          format: uuid
        newAdminId:
          type: string
          format: uuid
      additionalProperties: false
    AddChatGroupMember:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        newMemberId:
          type: string
          format: uuid
        membershipType:
          type: integer
          format: int32
      additionalProperties: false
    AddressFamily:
      enum:
        - Unspecified
        - Unix
        - InterNetwork
        - ImpLink
        - Pup
        - Chaos
        - NS
        - Iso
        - Ecma
        - DataKit
        - Ccitt
        - Sna
        - DecNet
        - DataLink
        - Lat
        - HyperChannel
        - AppleTalk
        - NetBios
        - VoiceView
        - FireFox
        - Banyan
        - Atm
        - InterNetworkV6
        - Cluster
        - Ieee12844
        - Irda
        - NetworkDesigners
        - Max
        - Packet
        - ControllerAreaNetwork
        - Unknown
      type: string
    ApiResponseStatus:
      enum:
        - Success
        - Failure
      type: string
    ChangeUserStatus:
      type: object
      properties:
        newStatus:
          $ref: '#/components/schemas/UserStatus'
      additionalProperties: false
    ChatGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creatorId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        picture:
          $ref: '#/components/schemas/Media'
        adminIds:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        admins:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        pinnedMessages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PinnedMessage'
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupAttachment:
      type: object
      properties:
        chatGroupId:
          type: string
          format: uuid
        attachmentId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        mediaInfo:
          $ref: '#/components/schemas/Media'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ChatGroupAttachmentCursorPagedApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroupAttachment'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupDetailsEntry:
      type: object
      properties:
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        creator:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    ChatGroupDetailsEntryApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ChatGroupDetailsEntry'
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupFeedEntry:
      type: object
      properties:
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        latestMessage:
          $ref: '#/components/schemas/ChatMessage'
        messageSender:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    ChatGroupFeedEntryListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroupFeedEntry'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupJoinRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        chatGroupId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
      additionalProperties: false
    ChatGroupListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroup'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupMember:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        chatGroupId:
          type: string
          format: uuid
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        createdAt:
          type: string
          format: date-time
        membershipType:
          type: integer
          format: int32
      additionalProperties: false
    ChatGroupMemberApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ChatGroupMember'
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatGroupMessageEntry:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ChatMessage'
        forwardedMessage:
          $ref: '#/components/schemas/ChatMessage'
        senderInfo:
          $ref: '#/components/schemas/MessageSenderInfoEntry'
        userReaction:
          $ref: '#/components/schemas/UserMessageReaction'
        repliersInfo:
          $ref: '#/components/schemas/MessageRepliersInfoEntry'
      additionalProperties: false
    ChatGroupMessageEntryCursorPagedApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatGroupMessageEntry'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chatGroupId:
          type: string
          format: uuid
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        userId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        content:
          type: string
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          nullable: true
        reactionCounts:
          type: object
          additionalProperties:
            type: integer
            format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    ChatMessageListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatMessageReaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        messageId:
          type: string
          format: uuid
        message:
          $ref: '#/components/schemas/ChatMessage'
        chatGroupId:
          type: string
          format: uuid
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        reactionCode:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
    ChatMessageReactionListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageReaction'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    ChatMessageReply:
      type: object
      properties:
        id:
          type: string
          format: uuid
        chatGroupId:
          type: string
          format: uuid
        chatGroup:
          $ref: '#/components/schemas/ChatGroup'
        userId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        content:
          type: string
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Media'
          nullable: true
        reactionCounts:
          type: object
          additionalProperties:
            type: integer
            format: int64
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
        replyToId:
          type: string
          format: uuid
      additionalProperties: false
    ChatMessageReplyCursorPagedApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageReply'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    DeleteGroupChatMessageRequest:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        messageId:
          type: string
          format: uuid
      additionalProperties: false
    EditGroupChatMessageRequest:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        messageId:
          type: string
          format: uuid
        newContent:
          type: string
          nullable: true
      additionalProperties: false
    EditUserDetails:
      type: object
      properties:
        username:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        profilePicture:
          $ref: '#/components/schemas/InputFile'
        phoneNumbers:
          uniqueItems: true
          type: array
          items:
            type: string
          nullable: true
        newPasswordInput:
          $ref: '#/components/schemas/NewPasswordInput'
      additionalProperties: false
    Email:
      type: object
      properties:
        value:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    FacebookSignUp:
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
      additionalProperties: false
    FriendInvitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        inviterId:
          type: string
          format: uuid
        inviteeId:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/FriendInvitationStatus'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    FriendInvitationListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/FriendInvitation'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    FriendInvitationStatus:
      enum:
        - Pending
        - Declined
        - Accepted
      type: string
    FriendsRelation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        friendOneId:
          type: string
          format: uuid
        friendTwoId:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    GetChatGroupSharedAttachmentsRequest:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        pageSize:
          type: integer
          format: int32
        pagingCursor:
          type: string
          nullable: true
      additionalProperties: false
    GoogleSignUp:
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
      additionalProperties: false
    GroupJoinRequestEntry:
      type: object
      properties:
        joinRequest:
          $ref: '#/components/schemas/ChatGroupJoinRequest'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    GroupJoinRequestEntryListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupJoinRequestEntry'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    IPAddress:
      type: object
      properties:
        addressFamily:
          $ref: '#/components/schemas/AddressFamily'
        scopeId:
          type: integer
          format: int64
        isIPv6Multicast:
          type: boolean
          readOnly: true
        isIPv6LinkLocal:
          type: boolean
          readOnly: true
        isIPv6SiteLocal:
          type: boolean
          readOnly: true
        isIPv6Teredo:
          type: boolean
          readOnly: true
        isIPv6UniqueLocal:
          type: boolean
          readOnly: true
        isIPv4MappedToIPv6:
          type: boolean
          readOnly: true
        address:
          type: integer
          format: int64
          deprecated: true
      additionalProperties: false
    InputFile:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Stream'
        fileName:
          type: string
          nullable: true
        sizeInBytes:
          type: integer
          format: int64
          readOnly: true
      additionalProperties: false
    LeaveChatGroup:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        reason:
          type: string
          nullable: true
      additionalProperties: false
    Media:
      type: object
      properties:
        id:
          type: string
          format: uuid
        mediaUrl:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    MessageReplierInfoEntry:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        profilePictureUrl:
          type: string
          nullable: true
      additionalProperties: false
    MessageRepliersInfoEntry:
      type: object
      properties:
        total:
          type: integer
          format: int64
        lastUpdatedAt:
          type: string
          format: date-time
          nullable: true
        replierInfos:
          type: array
          items:
            $ref: '#/components/schemas/MessageReplierInfoEntry'
          nullable: true
      additionalProperties: false
    MessageSenderInfoEntry:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        profilePictureUrl:
          type: string
          nullable: true
      additionalProperties: false
    NewPasswordInput:
      type: object
      properties:
        oldPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    ObjectApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    PhoneNumber:
      type: object
      properties:
        value:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    PinnedMessage:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        pinnerId:
          type: string
          format: uuid
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ReactToChatMessageRequest:
      required:
        - groupId
        - messageId
        - reactionType
      type: object
      properties:
        messageId:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        reactionType:
          type: integer
          format: int64
      additionalProperties: false
    RegularSignIn:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        rememberMe:
          type: boolean
      additionalProperties: false
    RegularSignUp:
      type: object
      properties:
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    RemoveChatGroupMember:
      type: object
      properties:
        groupId:
          type: string
          format: uuid
        memberId:
          type: string
          format: uuid
      additionalProperties: false
    SendGroupChatMessageReplyRequest:
      type: object
      properties:
        chatGroupId:
          type: string
          format: uuid
        replyToId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
        files:
          type: array
          items:
            type: string
            format: binary
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    ShareMessage:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        content:
          type: string
          nullable: true
      additionalProperties: false
    Stream:
      type: object
      properties:
        canRead:
          type: boolean
          readOnly: true
        canWrite:
          type: boolean
          readOnly: true
        canSeek:
          type: boolean
          readOnly: true
        canTimeout:
          type: boolean
          readOnly: true
        length:
          type: integer
          format: int64
          readOnly: true
        position:
          type: integer
          format: int64
        readTimeout:
          type: integer
          format: int32
        writeTimeout:
          type: integer
          format: int32
      additionalProperties: false
    Unit:
      type: object
      additionalProperties: false
    UnitApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/Unit'
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    UnreactToChatMessageRequest:
      required:
        - groupId
        - messageId
        - messageReactionId
      type: object
      properties:
        messageId:
          type: string
          format: uuid
        groupId:
          type: string
          format: uuid
        messageReactionId:
          type: string
          format: uuid
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        email:
          $ref: '#/components/schemas/Email'
        status:
          $ref: '#/components/schemas/UserStatus'
        roles:
          type: array
          items:
            type: string
          nullable: true
        phoneNumbers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
          nullable: true
        profilePicture:
          $ref: '#/components/schemas/Media'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastLogin:
          type: string
          format: date-time
        deviceIps:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IPAddress'
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        userHandle:
          type: string
          nullable: true
      additionalProperties: false
    UserDetailsEntry:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        friendsRelation:
          $ref: '#/components/schemas/FriendsRelation'
        friendInvitation:
          $ref: '#/components/schemas/FriendInvitation'
      additionalProperties: false
    UserDetailsEntryApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UserDetailsEntry'
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    UserListApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    UserMessageReaction:
      type: object
      properties:
        reactionCode:
          type: integer
          format: int64
      additionalProperties: false
    UserNotification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/UserNotificationType'
        metadata:
          $ref: '#/components/schemas/UserNotificationMetadata'
        summary:
          type: string
          nullable: true
        read:
          type: boolean
      additionalProperties: false
    UserNotificationCursorPagedApiResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatus'
        errors:
          type: array
          items:
            type: string
          nullable: true
        message:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
          nullable: true
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
    UserNotificationMetadata:
      type: object
      properties:
        userMedia:
          $ref: '#/components/schemas/Media'
      additionalProperties: false
    UserNotificationType:
      enum:
        - Unspecified
        - IncomingFriendInvite
        - AcceptedFriendInvite
        - DeclinedFriendInvite
        - UserMention
      type: string
    UserStatus:
      enum:
        - Online
        - Away
        - Offline
      type: string