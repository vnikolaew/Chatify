/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/Auth/me": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signup": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegularSignUp"];
          "text/json": components["schemas"]["RegularSignUp"];
          "application/*+json": components["schemas"]["RegularSignUp"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signout": {
    post: {
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signin": {
    post: {
      parameters: {
        query?: {
          returnUrl?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegularSignIn"];
          "text/json": components["schemas"]["RegularSignIn"];
          "application/*+json": components["schemas"]["RegularSignIn"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Redirect */
        302: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signup/google": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GoogleSignUp"];
          "text/json": components["schemas"]["GoogleSignUp"];
          "application/*+json": components["schemas"]["GoogleSignUp"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signup/facebook": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FacebookSignUp"];
          "text/json": components["schemas"]["FacebookSignUp"];
          "application/*+json": components["schemas"]["FacebookSignUp"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/signup/github": {
    post: {
      parameters: {
        query?: {
          code?: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Auth/confirm-email": {
    post: {
      parameters: {
        query?: {
          token?: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/chatgroups/join/{groupId}": {
    post: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/chatgroups/accept/{requestId}": {
    post: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/chatgroups/decline/{requestId}": {
    post: {
      parameters: {
        path: {
          requestId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/chatgroups/requests/{groupId}": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GroupJoinRequestEntryListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ChatGroups": {
    post: {
      requestBody?: {
        content: {
          "multipart/form-data": {
            About?: string;
            Name?: string;
            /** Format: binary */
            File?: string;
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/{groupId}": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupDetailsEntryApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: uuid */
            ChatGroupId?: string;
            Name?: string;
            About?: string;
            /** Format: binary */
            File?: string;
          };
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/feed": {
    get: {
      parameters: {
        query?: {
          limit?: number;
          offset?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupFeedEntryListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/{groupId}/members/search": {
    get: {
      parameters: {
        query?: {
          q?: string;
        };
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/search": {
    get: {
      parameters: {
        query?: {
          q?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/{groupId}/attachments": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetChatGroupSharedAttachmentsRequest"];
          "text/json": components["schemas"]["GetChatGroupSharedAttachmentsRequest"];
          "application/*+json": components["schemas"]["GetChatGroupSharedAttachmentsRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupAttachmentCursorPagedApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/{groupId}/pins": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatMessageListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/members": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddChatGroupMember"];
          "text/json": components["schemas"]["AddChatGroupMember"];
          "application/*+json": components["schemas"]["AddChatGroupMember"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RemoveChatGroupMember"];
          "text/json": components["schemas"]["RemoveChatGroupMember"];
          "application/*+json": components["schemas"]["RemoveChatGroupMember"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/members/{groupId}/{memberId}": {
    get: {
      parameters: {
        path: {
          groupId: string;
          memberId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupMemberApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/leave": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LeaveChatGroup"];
          "text/json": components["schemas"]["LeaveChatGroup"];
          "application/*+json": components["schemas"]["LeaveChatGroup"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/ChatGroups/admins": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AddChatGroupAdmin"];
          "text/json": components["schemas"]["AddChatGroupAdmin"];
          "application/*+json": components["schemas"]["AddChatGroupAdmin"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Friendships": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Friendships/sent": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FriendInvitationListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Friendships/incoming": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["FriendInvitationListApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Friendships/invite/{userId}": {
    post: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Friendships/accept/{inviteId}": {
    post: {
      parameters: {
        path: {
          inviteId: string;
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Friendships/decline/{inviteId}": {
    post: {
      parameters: {
        path: {
          inviteId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Friendships/{friendId}": {
    delete: {
      parameters: {
        path: {
          friendId: string;
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Messages/{groupId}": {
    get: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetMessagesByChatGroupRequest"];
          "text/json": components["schemas"]["GetMessagesByChatGroupRequest"];
          "application/*+json": components["schemas"]["GetMessagesByChatGroupRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatGroupMessageEntryCursorPagedApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          groupId: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: uuid */
            ChatGroupId?: string;
            Content?: string;
            Files?: string[];
            Metadata?: {
              [key: string]: string;
            };
          };
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": unknown;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": unknown;
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Messages/{messageId}/replies": {
    get: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["GetRepliesByForMessageRequest"];
          "text/json": components["schemas"]["GetRepliesByForMessageRequest"];
          "application/*+json": components["schemas"]["GetRepliesByForMessageRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["ChatMessageReplyCursorPagedApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SendGroupChatMessageReplyRequest"];
          "text/json": components["schemas"]["SendGroupChatMessageReplyRequest"];
          "application/*+json": components["schemas"]["SendGroupChatMessageReplyRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Messages/replies/{messageId}": {
    put: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EditGroupChatMessageRequest"];
          "text/json": components["schemas"]["EditGroupChatMessageRequest"];
          "application/*+json": components["schemas"]["EditGroupChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeleteGroupChatMessageRequest"];
          "text/json": components["schemas"]["DeleteGroupChatMessageRequest"];
          "application/*+json": components["schemas"]["DeleteGroupChatMessageRequest"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Messages/{messageId}": {
    put: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EditGroupChatMessageRequest"];
          "text/json": components["schemas"]["EditGroupChatMessageRequest"];
          "application/*+json": components["schemas"]["EditGroupChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["DeleteGroupChatMessageRequest"];
          "text/json": components["schemas"]["DeleteGroupChatMessageRequest"];
          "application/*+json": components["schemas"]["DeleteGroupChatMessageRequest"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/pins/{messageId}": {
    post: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PinChatGroupMessage"];
          "text/json": components["schemas"]["PinChatGroupMessage"];
          "application/*+json": components["schemas"]["PinChatGroupMessage"];
        };
      };
      responses: {
        /** @description No Content */
        204: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/share/{messageId}": {
    post: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShareMessage"];
          "text/json": components["schemas"]["ShareMessage"];
          "application/*+json": components["schemas"]["ShareMessage"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Notifications": {
    get: {
      parameters: {
        query?: {
          pageSize?: number;
          pagingCursor?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserNotificationCursorPagedApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Notifications/unread": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserNotificationCursorPagedApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Profile/status": {
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ChangeUserStatus"];
          "text/json": components["schemas"]["ChangeUserStatus"];
          "application/*+json": components["schemas"]["ChangeUserStatus"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
      };
    };
  };
  "/api/Profile/details": {
    patch: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EditUserDetails"];
          "text/json": components["schemas"]["EditUserDetails"];
          "application/*+json": components["schemas"]["EditUserDetails"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Profile/{userId}/details": {
    get: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserDetailsEntryApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Profile/search": {
    get: {
      parameters: {
        query?: {
          usernameQuery?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserListApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Reactions/{messageId}": {
    post: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ReactToChatMessageRequest"];
          "text/json": components["schemas"]["ReactToChatMessageRequest"];
          "application/*+json": components["schemas"]["ReactToChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Reactions/replies/{messageId}": {
    post: {
      parameters: {
        path: {
          messageId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ReactToChatMessageRequest"];
          "text/json": components["schemas"]["ReactToChatMessageRequest"];
          "application/*+json": components["schemas"]["ReactToChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: {
            "application/json": components["schemas"]["ObjectApiResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Reactions/{messageReactionId}": {
    delete: {
      parameters: {
        path: {
          messageReactionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UnreactToChatMessageRequest"];
          "text/json": components["schemas"]["UnreactToChatMessageRequest"];
          "application/*+json": components["schemas"]["UnreactToChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Reactions/replies/{messageReactionId}": {
    delete: {
      parameters: {
        path: {
          messageReactionId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UnreactToChatMessageRequest"];
          "text/json": components["schemas"]["UnreactToChatMessageRequest"];
          "application/*+json": components["schemas"]["UnreactToChatMessageRequest"];
        };
      };
      responses: {
        /** @description Accepted */
        202: {
          content: never;
        };
        /** @description Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["UnitApiResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AddChatGroupAdmin: {
      /** Format: uuid */
      chatGroupId?: string;
      /** Format: uuid */
      newAdminId?: string;
    };
    AddChatGroupMember: {
      /** Format: uuid */
      groupId?: string;
      /** Format: uuid */
      newMemberId?: string;
      /** Format: int32 */
      membershipType?: number;
    };
    /** @enum {string} */
    AddressFamily: "Unknown" | "Unspecified" | "Unix" | "InterNetwork" | "ImpLink" | "Pup" | "Chaos" | "NS" | "Iso" | "Ecma" | "DataKit" | "Ccitt" | "Sna" | "DecNet" | "DataLink" | "Lat" | "HyperChannel" | "AppleTalk" | "NetBios" | "VoiceView" | "FireFox" | "Banyan" | "Atm" | "InterNetworkV6" | "Cluster" | "Ieee12844" | "Irda" | "NetworkDesigners" | "Max" | "Packet" | "ControllerAreaNetwork";
    /** @enum {string} */
    ApiResponseStatus: "Success" | "Failure";
    ChangeUserStatus: {
      newStatus?: components["schemas"]["UserStatus"];
    };
    ChatGroup: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      creatorId?: string;
      name?: string | null;
      about?: string | null;
      picture?: components["schemas"]["Media"];
      adminIds?: string[] | null;
      admins?: components["schemas"]["User"][] | null;
      metadata?: {
        [key: string]: string;
      } | null;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      createdAt?: string;
    };
    ChatGroupAttachment: {
      /** Format: uuid */
      chatGroupId?: string;
      /** Format: uuid */
      attachmentId?: string;
      /** Format: uuid */
      userId?: string;
      username?: string | null;
      mediaInfo?: components["schemas"]["Media"];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    ChatGroupAttachmentCursorPagedApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroupAttachment"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    ChatGroupDetailsEntry: {
      chatGroup?: components["schemas"]["ChatGroup"];
      members?: components["schemas"]["User"][] | null;
      creator?: components["schemas"]["User"];
    };
    ChatGroupDetailsEntryApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroupDetailsEntry"];
      /** Format: date-time */
      timestamp?: string;
    };
    ChatGroupFeedEntry: {
      chatGroup?: components["schemas"]["ChatGroup"];
      latestMessage?: components["schemas"]["ChatMessage"];
      messageSender?: components["schemas"]["User"];
    };
    ChatGroupFeedEntryListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroupFeedEntry"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    ChatGroupJoinRequest: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      userId?: string;
      /** Format: uuid */
      chatGroupId?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: int32 */
      status?: number;
    };
    ChatGroupListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroup"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    ChatGroupMember: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      userId?: string;
      username?: string | null;
      user?: components["schemas"]["User"];
      /** Format: uuid */
      chatGroupId?: string;
      chatGroup?: components["schemas"]["ChatGroup"];
      /** Format: date-time */
      createdAt?: string;
      /** Format: int32 */
      membershipType?: number;
    };
    ChatGroupMemberApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroupMember"];
      /** Format: date-time */
      timestamp?: string;
    };
    ChatGroupMessageEntry: {
      message?: components["schemas"]["ChatMessage"];
      forwardedMessage?: components["schemas"]["ChatMessage"];
      senderInfo?: components["schemas"]["MessageSenderInfoEntry"];
      repliersInfo?: components["schemas"]["MessageRepliersInfoEntry"];
    };
    ChatGroupMessageEntryCursorPagedApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatGroupMessageEntry"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    ChatMessage: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      chatGroupId?: string;
      chatGroup?: components["schemas"]["ChatGroup"];
      /** Format: uuid */
      userId?: string;
      user?: components["schemas"]["User"];
      content?: string | null;
      attachments?: components["schemas"]["Media"][] | null;
      reactionCounts?: {
        [key: string]: number;
      } | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      metadata?: {
        [key: string]: string;
      } | null;
    };
    ChatMessageListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatMessage"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    ChatMessageReply: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      chatGroupId?: string;
      chatGroup?: components["schemas"]["ChatGroup"];
      /** Format: uuid */
      userId?: string;
      user?: components["schemas"]["User"];
      content?: string | null;
      attachments?: components["schemas"]["Media"][] | null;
      reactionCounts?: {
        [key: string]: number;
      } | null;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      metadata?: {
        [key: string]: string;
      } | null;
      /** Format: uuid */
      replyToId?: string;
    };
    ChatMessageReplyCursorPagedApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["ChatMessageReply"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    DeleteGroupChatMessageRequest: {
      /** Format: uuid */
      groupId?: string;
      /** Format: uuid */
      messageId?: string;
    };
    EditGroupChatMessageRequest: {
      /** Format: uuid */
      groupId?: string;
      /** Format: uuid */
      messageId?: string;
      newContent?: string | null;
    };
    EditUserDetails: {
      username?: string | null;
      displayName?: string | null;
      profilePicture?: components["schemas"]["InputFile"];
      phoneNumbers?: string[] | null;
      newPasswordInput?: components["schemas"]["NewPasswordInput"];
    };
    Email: {
      value?: string | null;
    };
    FacebookSignUp: {
      accessToken?: string | null;
    };
    FriendInvitation: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      inviterId?: string;
      /** Format: uuid */
      inviteeId?: string;
      status?: components["schemas"]["FriendInvitationStatus"];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
    };
    FriendInvitationListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["FriendInvitation"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    /** @enum {string} */
    FriendInvitationStatus: "Pending" | "Declined" | "Accepted";
    FriendsRelation: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      friendOneId?: string;
      /** Format: uuid */
      friendTwoId?: string;
      /** Format: uuid */
      groupId?: string;
      /** Format: date-time */
      createdAt?: string;
    };
    GetChatGroupSharedAttachmentsRequest: {
      /** Format: uuid */
      groupId?: string;
      /** Format: int32 */
      pageSize?: number;
      pagingCursor?: string | null;
    };
    GetMessagesByChatGroupRequest: {
      /** Format: uuid */
      groupId?: string;
      /** Format: int32 */
      pageSize?: number;
      pagingCursor?: string | null;
    };
    GetRepliesByForMessageRequest: {
      /** Format: uuid */
      messageId?: string;
      /** Format: int32 */
      pageSize?: number;
      pagingCursor?: string | null;
    };
    GoogleSignUp: {
      accessToken?: string | null;
    };
    GroupJoinRequestEntry: {
      joinRequest?: components["schemas"]["ChatGroupJoinRequest"];
      user?: components["schemas"]["User"];
    };
    GroupJoinRequestEntryListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["GroupJoinRequestEntry"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    IPAddress: {
      addressFamily?: components["schemas"]["AddressFamily"];
      /** Format: int64 */
      scopeId?: number;
      isIPv6Multicast?: boolean;
      isIPv6LinkLocal?: boolean;
      isIPv6SiteLocal?: boolean;
      isIPv6Teredo?: boolean;
      isIPv6UniqueLocal?: boolean;
      isIPv4MappedToIPv6?: boolean;
      /**
       * Format: int64
       * @deprecated
       */
      address?: number;
    };
    InputFile: {
      data?: components["schemas"]["Stream"];
      fileName?: string | null;
      /** Format: int64 */
      sizeInBytes?: number;
    };
    LeaveChatGroup: {
      /** Format: uuid */
      groupId?: string;
      reason?: string | null;
    };
    Media: {
      /** Format: uuid */
      id?: string;
      mediaUrl?: string | null;
      fileName?: string | null;
      type?: string | null;
    };
    MessageReplierInfoEntry: {
      /** Format: uuid */
      userId?: string;
      username?: string | null;
      profilePictureUrl?: string | null;
    };
    MessageRepliersInfoEntry: {
      /** Format: int64 */
      total?: number;
      /** Format: date-time */
      lastUpdatedAt?: string | null;
      replierInfos?: components["schemas"]["MessageReplierInfoEntry"][] | null;
    };
    MessageSenderInfoEntry: {
      /** Format: uuid */
      userId?: string;
      username?: string | null;
      profilePictureUrl?: string | null;
    };
    NewPasswordInput: {
      oldPassword?: string | null;
      newPassword?: string | null;
    };
    ObjectApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: Record<string, unknown> | null;
      /** Format: date-time */
      timestamp?: string;
    };
    PhoneNumber: {
      value?: string | null;
    };
    PinChatGroupMessage: {
      /** Format: uuid */
      messageId?: string;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
      [key: string]: unknown;
    };
    ReactToChatMessageRequest: {
      /** Format: uuid */
      messageId?: string;
      /** Format: uuid */
      groupId?: string;
      /** Format: int32 */
      reactionType?: number;
    };
    RegularSignIn: {
      email?: string | null;
      password?: string | null;
      rememberMe?: boolean;
    };
    RegularSignUp: {
      username?: string | null;
      email?: string | null;
      password?: string | null;
    };
    RemoveChatGroupMember: {
      /** Format: uuid */
      groupId?: string;
      /** Format: uuid */
      memberId?: string;
    };
    SendGroupChatMessageReplyRequest: {
      /** Format: uuid */
      chatGroupId?: string;
      /** Format: uuid */
      replyToId?: string;
      content?: string | null;
      files?: string[] | null;
      metadata?: {
        [key: string]: string;
      } | null;
    };
    ShareMessage: {
      /** Format: uuid */
      messageId?: string;
      /** Format: uuid */
      groupId?: string;
      content?: string | null;
    };
    Stream: {
      canRead?: boolean;
      canWrite?: boolean;
      canSeek?: boolean;
      canTimeout?: boolean;
      /** Format: int64 */
      length?: number;
      /** Format: int64 */
      position?: number;
      /** Format: int32 */
      readTimeout?: number;
      /** Format: int32 */
      writeTimeout?: number;
    };
    Unit: Record<string, never>;
    UnitApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["Unit"];
      /** Format: date-time */
      timestamp?: string;
    };
    UnreactToChatMessageRequest: {
      /** Format: uuid */
      messageReactionId?: string;
      /** Format: uuid */
      messageId?: string;
      /** Format: uuid */
      groupId?: string;
    };
    User: {
      /** Format: uuid */
      id?: string;
      username?: string | null;
      email?: components["schemas"]["Email"];
      status?: components["schemas"]["UserStatus"];
      roles?: string[] | null;
      phoneNumbers?: components["schemas"]["PhoneNumber"][] | null;
      profilePicture?: components["schemas"]["Media"];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      /** Format: date-time */
      lastLogin?: string;
      deviceIps?: components["schemas"]["IPAddress"][] | null;
      metadata?: {
        [key: string]: string;
      } | null;
      displayName?: string | null;
    };
    UserDetailsEntry: {
      user?: components["schemas"]["User"];
      friendsRelation?: components["schemas"]["FriendsRelation"];
      friendInvitation?: components["schemas"]["FriendInvitation"];
    };
    UserDetailsEntryApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["UserDetailsEntry"];
      /** Format: date-time */
      timestamp?: string;
    };
    UserListApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["User"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    UserNotification: {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      userId?: string;
      user?: components["schemas"]["User"];
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string | null;
      type?: components["schemas"]["UserNotificationType"];
      metadata?: components["schemas"]["UserNotificationMetadata"];
      summary?: string | null;
      read?: boolean;
    };
    UserNotificationCursorPagedApiResponse: {
      status?: components["schemas"]["ApiResponseStatus"];
      errors?: string[] | null;
      message?: string | null;
      data?: components["schemas"]["UserNotification"][] | null;
      /** Format: date-time */
      timestamp?: string;
    };
    UserNotificationMetadata: {
      userMedia?: components["schemas"]["Media"];
    };
    /** @enum {string} */
    UserNotificationType: "Unspecified" | "IncomingFriendInvite" | "AcceptedFriendInvite" | "DeclinedFriendInvite" | "UserMention";
    /** @enum {string} */
    UserStatus: "Online" | "Away" | "Offline";
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
